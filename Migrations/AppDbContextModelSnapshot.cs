// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ConversionApplication;

#nullable disable

namespace ConversionApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("WebApplication1.Energy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BTU")
                        .HasColumnType("REAL");

                    b.Property<double>("Calories")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Joules")
                        .HasColumnType("REAL");

                    b.Property<double>("KilowattHours")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Energy");
                });

            modelBuilder.Entity("WebApplication1.Length", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Feet")
                        .HasColumnType("REAL");

                    b.Property<double>("Inches")
                        .HasColumnType("REAL");

                    b.Property<double>("Meters")
                        .HasColumnType("REAL");

                    b.Property<double>("Miles")
                        .HasColumnType("REAL");

                    b.Property<double>("Millimeters")
                        .HasColumnType("REAL");

                    b.Property<double>("Yards")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Length");
                });

            modelBuilder.Entity("WebApplication1.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Celsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Fahrenheit")
                        .HasColumnType("REAL");

                    b.Property<double>("Kelvin")
                        .HasColumnType("REAL");

                    b.Property<double>("Reomur")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Temperature");
                });

            modelBuilder.Entity("WebApplication1.Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Grams")
                        .HasColumnType("REAL");

                    b.Property<double>("Karats")
                        .HasColumnType("REAL");

                    b.Property<double>("Ounces")
                        .HasColumnType("REAL");

                    b.Property<double>("Pounds")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Weight");
                });
#pragma warning restore 612, 618
        }
    }
}
